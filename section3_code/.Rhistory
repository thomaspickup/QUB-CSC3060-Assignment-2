install.packages("randomForest")
library(randomForest)
?randomForest
treesize(randomForest(V1~., data=training_set.dataframe, maxnodes=4, ntree=30))
set.seed(3060)
# Sets the location variables and the working directory
training_set.location <- "/Users/thomaspickup/Documents/University/CSC3060/Assignments/Assignment2_40145342/training_dataset"
section_code.location <- "/Users/thomaspickup/Documents/University/CSC3060/Assignments/Assignment2_40145342/section2_code"
setwd(training_set.location)
# Finds all the CSV files in that path with the suffix features.csv
training_set.files <- list.files(pattern="*features.csv")
# Goes through the list of files and imports the data into training_set.data
training_set.data <- list()
for (i in 1:length(training_set.files)) {
training_set.data[[i]] <- read.csv(training_set.files[i], header=FALSE, sep=",")
}
# Calls RBind on training_set.data and creates one dataframe from the individual ones
training_set.dataframe <- do.call(rbind, training_set.data)
library(randomForest)
treesize(randomForest(V1~., data=training_set.dataframe, maxnodes=4, ntree=30))
model <- randomForest(V1~., data=training_set.train, maxnodes=4, ntree=30)
predictions <- predict(model, test_set.test, type = "class")
training_set.selected_rows <- sample(nrow(training_set.dataframe), 0.7*nrow(data1), replace = FALSE)
training_set.selected_rows <- sample(nrow(training_set.dataframe), 0.7*nrow(training_set.dataframe, replace = FALSE)
test_set.test <- training_set.dataframe[-training_set.selected_rows,]
library(randomForest)
training_set.selected_rows <- sample(nrow(training_set.dataframe), 0.7*nrow(training_set.dataframe, replace = FALSE))
training_set.selected_rows <- sample(nrow(training_set.dataframe), 0.7*nrow(training_set.dataframe), replace = FALSE)
training_set.train <- training_set.dataframe[training_set.selected_rows,]
test_set.test <- training_set.dataframe[-training_set.selected_rows,]
library(randomForest)
model <- randomForest(V1~., data=training_set.train, maxnodes=4, ntree=30)
predictions <- predict(model, test_set.test, type = "class")
table(predictions, test_set.test$V1)
model <- randomForest(as.factor(V1)~., data=training_set.train, maxnodes=4, ntree=30)
predictions <- predict(model, test_set.test, type = "class")
table(predictions, test_set.test$V1)
model <- randomForest(as.factor(V1)~., data=training_set.train, mtry=4, ntree=30)
predictions <- predict(model, test_set.test, type = "class")
table(predictions, test_set.test$V1)
mean(predictions==test_set.test$V1)
?seq
set.seed(3060)
# Sets the location variables and the working directory
training_set.location <- "/Users/thomaspickup/Documents/University/CSC3060/Assignments/Assignment2_40145342/training_dataset"
section_code.location <- "/Users/thomaspickup/Documents/University/CSC3060/Assignments/Assignment2_40145342/section2_code"
setwd(training_set.location)
# Finds all the CSV files in that path with the suffix features.csv
training_set.files <- list.files(pattern="*features.csv")
# Goes through the list of files and imports the data into training_set.data
training_set.data <- list()
for (i in 1:length(training_set.files)) {
training_set.data[[i]] <- read.csv(training_set.files[i], header=FALSE, sep=",")
}
# Calls RBind on training_set.data and creates one dataframe from the individual ones
training_set.dataframe <- do.call(rbind, training_set.data)
kfoldsk = 5
training_set.dataframe <- training_set.dataframe[sample(nrow(training_set.dataframe)),]
training_set.dataframe$folds <- cut(seq(1,nrow(training_set.dataframe)),breaks=kfoldsk,labels=FALSE)
library(randomForest)
pred_list = c(2, 4, 6, 8)
accuracies = c()
predicators = c()
trees = c()
for (t in seq(25,400,5)) {
for (p in pred_list) {
k_accuracies = c()
for(i in 1:kfoldsk) {
training_set.this_fold  = training_set.dataframe[training_set.dataframe$folds != i,]
test_set.this_fold = training_set.dataframe[training_set.dataframe$folds == i,]
# fit knn model on this fold
model <- randomForest(as.factor(V1)~., data=training_set.this_fold, mtry=p, ntree=t)
predictions <- predict(model, test_set.this_fold, type = "class")
correct_list = predctions == test_set.this_fold$V1
nr_correct = nrow(test_set.this_fold[correct_list,])
this_acc_rate = nr_correct/nrow(test_set.this_fold)
k_accuracies <- cbind(k_accuracies, this_acc_rate)
}
trees = cbind(trees, t)
predicators = cbind(predicators, p)
accuracies = cbind(accuracies, mean(k_accuracies))
}
}
for (t in seq(25,400,5)) {
for (p in pred_list) {
k_accuracies = c()
for(i in 1:kfoldsk) {
training_set.this_fold  = training_set.dataframe[training_set.dataframe$folds != i,]
test_set.this_fold = training_set.dataframe[training_set.dataframe$folds == i,]
# fit knn model on this fold
model <- randomForest(as.factor(V1)~., data=training_set.this_fold, mtry=p, ntree=t)
predictions <- predict(model, test_set.this_fold, type = "class")
correct_list = predictions == test_set.this_fold$V1
nr_correct = nrow(test_set.this_fold[correct_list,])
this_acc_rate = nr_correct/nrow(test_set.this_fold)
k_accuracies <- cbind(k_accuracies, this_acc_rate)
}
trees = cbind(trees, t)
predicators = cbind(predicators, p)
accuracies = cbind(accuracies, mean(k_accuracies))
}
}
print(paste(t,p, sep = " "))
for (t in seq(25,400,5)) {
for (p in pred_list) {
k_accuracies = c()
for(i in 1:kfoldsk) {
training_set.this_fold  = training_set.dataframe[training_set.dataframe$folds != i,]
test_set.this_fold = training_set.dataframe[training_set.dataframe$folds == i,]
# fit knn model on this fold
model <- randomForest(as.factor(V1)~., data=training_set.this_fold, mtry=p, ntree=t)
predictions <- predict(model, test_set.this_fold, type = "class")
correct_list = predictions == test_set.this_fold$V1
nr_correct = nrow(test_set.this_fold[correct_list,])
this_acc_rate = nr_correct/nrow(test_set.this_fold)
k_accuracies <- cbind(k_accuracies, this_acc_rate)
}
print(paste(t,p, sep = " "))
trees = cbind(trees, t)
predicators = cbind(predicators, p)
accuracies = cbind(accuracies, mean(k_accuracies))
}
}
print(paste("Completed:", t, p, sep = " "))
for (t in seq(25,400,5)) {
for (p in pred_list) {
k_accuracies = c()
for(i in 1:kfoldsk) {
training_set.this_fold  = training_set.dataframe[training_set.dataframe$folds != i,]
test_set.this_fold = training_set.dataframe[training_set.dataframe$folds == i,]
# fit knn model on this fold
model <- randomForest(as.factor(V1)~., data=training_set.this_fold, mtry=p, ntree=t)
predictions <- predict(model, test_set.this_fold, type = "class")
correct_list = predictions == test_set.this_fold$V1
nr_correct = nrow(test_set.this_fold[correct_list,])
this_acc_rate = nr_correct/nrow(test_set.this_fold)
k_accuracies <- cbind(k_accuracies, this_acc_rate)
}
print(paste("Completed:", t, p, sep = " "))
trees = cbind(trees, t)
predicators = cbind(predicators, p)
accuracies = cbind(accuracies, mean(k_accuracies))
}
}
results = cbind(t(predicators), t(trees), t(accuracies))
View(results)
new_results = results[16:315]
new_results = results[16:315, 1:3]
View(new_results)
new_results = results[11:315, 1:3]
View(new_results)
new_results = results[12:315, 1:3]
results = results[12:315, 1:3]
predicators = predicators[12:315]
trees = trees[12:315]
accuracies = accuracies[12:315]
results = cbind(t(predicators), t(trees), t(accuracies))
View(results)
results = cbind(t(predicators), t(trees), t(accuracies))
View(results)
predicators = t(predicators)
View(predicators)
trees = t(trees)
accuracies = t(accuracies)
results = cbind(t(predicators), t(trees), t(accuracies))
View(results)
View(results)
View(predicators)
library(ggplot2)
summary(results)
prediction_plot <- ggplot(results, aes(V1, V2)) + geom_raster(aes(fill = V3))
final_data = data.frame(results)
View(final_data)
prediction_plot <- ggplot(final_data, aes(X1, X2)) + geom_raster(aes(fill = X3))
View(prediction_plot)
plot(prediction_plot)
prediction_plot <- ggplot(final_data, aes(X1, X2, fill = X3)) + geom_raster(hjust = 0, vjust = 0)
plot(prediction_plot)
setwd(section_code.location)
ggsave("section3_part2_accuracy_graph.png")
section_code.location <- "/Users/thomaspickup/Documents/University/CSC3060/Assignments/Assignment2_40145342/section3_code"
setwd(section_code.location)
ggsave("section3_part2_accuracy_graph.png")
final_data %>% arrange(desc(X3))
final_data <- arrange(desc(X3))
library(dplyr)
final_data <- arrange(desc(X3))
final_data <- arrange(desc(final_data$X3))
results <- arrange(desc(V3))
final_data %>% arrange(desc(X3))
print(paste("Optimal Value of Predicators / Trees:",final_data$X1[1],"/", final_data$X2[1]))
final_data <- final_data %>% arrange(desc(X3))
print(paste("Optimal Value of Predicators / Trees:",final_data$X1[1],"/", final_data$X2[1]))
# Imports the classes needed for classification and plotting
library(ipred)
installed.packages("ipred")
# Imports the classes needed for classification and plotting
library(ipred)
training_set.tree <- bagging(as.factor(V1)~., training_set.dataframe)
set.seed(3060)
# Sets the location variables and the working directory
training_set.location <- "/Users/thomaspickup/Documents/University/CSC3060/Assignments/Assignment2_40145342/training_dataset"
section_code.location <- "/Users/thomaspickup/Documents/University/CSC3060/Assignments/Assignment2_40145342/section2_code"
setwd(training_set.location)
# Finds all the CSV files in that path with the suffix features.csv
training_set.files <- list.files(pattern="*features.csv")
# Goes through the list of files and imports the data into training_set.data
training_set.data <- list()
for (i in 1:length(training_set.files)) {
training_set.data[[i]] <- read.csv(training_set.files[i], header=FALSE, sep=",")
}
# Calls RBind on training_set.data and creates one dataframe from the individual ones
training_set.dataframe <- do.call(rbind, training_set.data)
# Imports the classes needed for classification and plotting
library(ipred)
training_set.tree <- bagging(as.factor(V1)~., training_set.dataframe)
View(training_set.tree)
set.seed(3060)
training_set.tree <- bagging(as.factor(V1)~., training_set.dataframe, nbagg=200, coob=TRUE)
training_set.tree
View(training_set.tree)
training_set.class <- predict(training_set.tree, training_set.dataframe)
summary(training_set.class)
nbag = c(25, 50, 200, 400)
# Calls RBind on training_set.data and creates one dataframe from the individual ones
training_set.dataframe <- do.call(rbind, training_set.data)
kfoldsk = 5
training_set.dataframe <- training_set.dataframe[sample(nrow(training_set.dataframe)),]
training_set.dataframe$folds <- cut(seq(1,nrow(training_set.dataframe)),breaks=kfoldsk,labels=FALSE)
# Imports the classes needed for classification and plotting
library(ipred)
nbag = c(25, 50, 200, 400)
accuracies = c()
for (n in nbag) {
training_set.tree <- bagging(as.factor(V1)~., training_set.dataframe, nbagg=200, coob=TRUE)
test_set.prediction <- predict(training_set.tree, training_set.dataframe)
k_accuracies = c()
for(i in 1:kfoldsk) {
training_set.this_fold  = training_set.dataframe[training_set.dataframe$folds != i,]
test_set.this_fold = training_set.dataframe[training_set.dataframe$folds == i,]
# fit knn model on this fold
training_set.tree <- bagging(as.factor(V1)~., training_set.this_fold, nbagg=n, coob=TRUE)
test_set.prediction <- predict(training_set.tree, test_set.this_fold)
correct_list = predictions == test_set.this_fold$V1
nr_correct = nrow(test_set.this_fold[correct_list,])
this_acc_rate = nr_correct/nrow(test_set.this_fold)
k_accuracies <- cbind(k_accuracies, this_acc_rate)
}
accuracies = cbind(accuracies, mean(k_accuracies))
print(pause(n ,"/" ,mean(k_accuracies)))
}
for (n in nbag) {
training_set.tree <- bagging(as.factor(V1)~., training_set.dataframe, nbagg=200, coob=TRUE)
test_set.prediction <- predict(training_set.tree, training_set.dataframe)
k_accuracies = c()
for(i in 1:kfoldsk) {
training_set.this_fold  = training_set.dataframe[training_set.dataframe$folds != i,]
test_set.this_fold = training_set.dataframe[training_set.dataframe$folds == i,]
# fit knn model on this fold
training_set.tree <- bagging(as.factor(V1)~., training_set.this_fold, nbagg=n, coob=TRUE)
test_set.prediction <- predict(training_set.tree, test_set.this_fold)
correct_list = test_set.prediction == test_set.this_fold$V1
nr_correct = nrow(test_set.this_fold[correct_list,])
this_acc_rate = nr_correct/nrow(test_set.this_fold)
k_accuracies <- cbind(k_accuracies, this_acc_rate)
}
accuracies = cbind(accuracies, mean(k_accuracies))
print(pause(n ,"/" ,mean(k_accuracies)))
}
nbag = c(25, 50, 200, 400)
accuracies = c()
for (n in nbag) {
training_set.tree <- bagging(as.factor(V1)~., training_set.dataframe, nbagg=200, coob=TRUE)
test_set.prediction <- predict(training_set.tree, training_set.dataframe)
k_accuracies = c()
for(i in 1:kfoldsk) {
training_set.this_fold  = training_set.dataframe[training_set.dataframe$folds != i,]
test_set.this_fold = training_set.dataframe[training_set.dataframe$folds == i,]
# fit knn model on this fold
training_set.tree <- bagging(as.factor(V1)~., training_set.this_fold, nbagg=n, coob=TRUE)
test_set.prediction <- predict(training_set.tree, test_set.this_fold)
correct_list = test_set.prediction == test_set.this_fold$V1
nr_correct = nrow(test_set.this_fold[correct_list,])
this_acc_rate = nr_correct/nrow(test_set.this_fold)
k_accuracies <- cbind(k_accuracies, this_acc_rate)
}
accuracies = cbind(accuracies, mean(k_accuracies))
print(paste(n ,"/" ,mean(k_accuracies)))
}
accuracies.dataframe = as.data.frame(t(accuracies))
accuracies.dataframe = cbind(nbag, accuracies.dataframe)
ggplot(accuracies.dataframe, aes(x=nbag, y=V1)) + geom_bar(stat = "identity")
section_code.location <- "/Users/thomaspickup/Documents/University/CSC3060/Assignments/Assignment2_40145342/section3_code"
setwd(section_code.location)
ggsave("part1_accuracy_graph.png")
library(ggplot2)
ggplot(accuracies.dataframe, aes(x=nbag, y=V1)) + geom_bar(stat = "identity")
setwd(section_code.location)
ggsave("part1_accuracy_graph.png")
